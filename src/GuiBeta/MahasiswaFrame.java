/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiBeta;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modultugasakhir.*;

/**
 *
 * @author Ajeng
 */
public class MahasiswaFrame extends javax.swing.JFrame {
    private User user = new User();
    private Mahasiswa mahasiswa = new Mahasiswa();
    private JadwalSeminar jadwalSeminar = new JadwalSeminar();
    /**
     * Creates new form Mahasiswa
     */
    public MahasiswaFrame() {
        initComponents();
        hideAll(false);
    }

    
    public MahasiswaFrame(User user) {
        setUser(user);
        setMahasiswa(new Mahasiswa().getSingleDatabase(user.getUsername()));
        initComponents();
        hideAll(false);
        namaMahasiswa.setText("Hai, " + getMahasiswa().getNama());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoutButton = new javax.swing.JButton();
        namaMahasiswa = new javax.swing.JLabel();
        tambahJudul = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        RevisiTable = new javax.swing.JTable();
        jadwalButton = new javax.swing.JButton();
        tipeJudulComboBox = new javax.swing.JComboBox<>();
        judulLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        logoutButton.setText("LOGOUT");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        namaMahasiswa.setText("Hai, ");

        tambahJudul.setText("AJUKAN JUDUL");
        tambahJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahJudulActionPerformed(evt);
            }
        });

        RevisiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Revisi", "Tanggal Revisi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RevisiTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(RevisiTable);

        jadwalButton.setText("LIHAT JADWAL SEMINAR");
        jadwalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jadwalButtonActionPerformed(evt);
            }
        });

        tipeJudulComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Pilih Judul-", "Proposal", "Tugas Akhir" }));
        tipeJudulComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipeJudulComboBoxActionPerformed(evt);
            }
        });

        judulLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        judulLabel.setText("Judul : ");

        jButton1.setText("SIMPAN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(tipeJudulComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tambahJudul)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(judulLabel)
                            .addComponent(namaMahasiswa)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jadwalButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(namaMahasiswa)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tambahJudul)
                    .addComponent(tipeJudulComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(judulLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jadwalButton)
                .addGap(137, 137, 137)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutButton)
                    .addComponent(jButton1))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambahJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahJudulActionPerformed
        // TODO add your handling code here:
        Judul jud = new Judul(getMahasiswa().getNim(), JOptionPane.showInputDialog(null, "Masukkan Judul", "Judul", 3), JOptionPane.showInputDialog(null, "Masukkan Deskripsi", "Deskripsi", 3), tipeJudulComboBox.getSelectedItem().toString());
        jud.insertToDatabase();
        tipeJudulComboBoxActionPerformed(evt);
    }//GEN-LAST:event_tambahJudulActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        new LoginFrame().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void tipeJudulComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipeJudulComboBoxActionPerformed
        // TODO add your handling code here:
        tambahJudul.setVisible(false);
        jadwalButton.setVisible(false);
        boolean cek = true;
        switch (tipeJudulComboBox.getSelectedItem().toString()){
            case "Proposal" :
            {
                ArrayList<Judul> AllJudul = new Judul().getAllTipeDatabase("Proposal");
                Iterator<Judul> listJudul = AllJudul.iterator();
        
                while(listJudul.hasNext()){
                    Judul judul = listJudul.next();
                    if(judul.MahasiswaDalamJudul.getNim().equals(getMahasiswa().getNim())){
                        tambahJudul.setVisible(false);
                        judulLabel.setVisible(true);
                        judulLabel.setText("Judul Proposal : " + judul.getNamaJudul());
                        getRevisiFromDatabase(judul.getIdJudul());
                        setJadwalSeminar(new JadwalSeminar().getSingleIdJudulDatabase(judul.getIdJudul()));
                        if(getJadwalSeminar().getJadwal() != null)
                            jadwalButton.setVisible(true);
                        cek = false;
                        break;
                    }
                    
                }
                if (cek){
                    JOptionPane.showMessageDialog(null, "Anda belum mengajukan Judul Proposal!");
                    tambahJudul.setVisible(true);
                    judulLabel.setVisible(false);
                }
                break;
            }
            case "Tugas Akhir" :
            {
                ArrayList<Judul> AllJudul = new Judul().getAllTipeDatabase("Tugas Akhir");
                Iterator<Judul> listJudul = AllJudul.iterator();
                
                while(listJudul.hasNext()){
                    Judul judul = listJudul.next();
                    if(judul.MahasiswaDalamJudul.getNim().equals(getMahasiswa().getNim())){
                        tambahJudul.setVisible(false);
                        judulLabel.setText("Judul Tugas Akhir : " + judul.getNamaJudul());
                        getRevisiFromDatabase(judul.getIdJudul());
                        setJadwalSeminar(new JadwalSeminar().getSingleIdJudulDatabase(judul.getIdJudul()));
                        if(getJadwalSeminar().getJadwal() != null)
                            jadwalButton.setVisible(true);
                        cek = false;
                        break;
                    }
                }
                if (cek){
                    JOptionPane.showMessageDialog(null, "Anda belum mengajukan Judul Tugas Akhir!");
                    tambahJudul.setVisible(true);
                    judulLabel.setVisible(false);
                }
                break;
            }
            default :
            {
                tambahJudul.setVisible(false);
                hideAll(false);
                JOptionPane.showMessageDialog(null, "Pilih tipe judul!");
                
            }
        }
        //JOptionPane.showMessageDialog(null, "Data Sudah di simpan");
        
    }//GEN-LAST:event_tipeJudulComboBoxActionPerformed

    private void jadwalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jadwalButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, new SimpleDateFormat("dd-MM-yyyy").format(getJadwalSeminar().getJadwal()));
    }//GEN-LAST:event_jadwalButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       JOptionPane.showMessageDialog(null, "data sudah di simpan");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MahasiswaFrame().setVisible(true);
            }
        });
    }
    
    public void getRevisiFromDatabase(String idJudul){
        DefaultTableModel modelTableRevisi = (DefaultTableModel) RevisiTable.getModel();
        modelTableRevisi.setRowCount(0);
        Object[] atributRevisi = new Object[2];
        try {
            ArrayList RevisiAll = new Revisi().getAllIdJudulDatabase(idJudul);
            Iterator listRevisi = RevisiAll.iterator();
            while(listRevisi.hasNext()){
                Revisi eachRevisi;
                eachRevisi = (Revisi) listRevisi.next();
                atributRevisi[0] = eachRevisi.getIsiRevisi();
                atributRevisi[1] = new SimpleDateFormat("dd-MM-yyyy").format(eachRevisi.getTanggalRevisi());
        
                modelTableRevisi.addRow(atributRevisi);
            }
            RevisiTable.setModel(modelTableRevisi);
        } catch (Exception ex) {
            Logger.getLogger(MahasiswaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void hideAll(boolean bool){
        jadwalButton.setVisible(bool);
        judulLabel.setVisible(bool);
        tambahJudul.setVisible(bool);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable RevisiTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jadwalButton;
    private javax.swing.JLabel judulLabel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel namaMahasiswa;
    private javax.swing.JButton tambahJudul;
    private javax.swing.JComboBox<String> tipeJudulComboBox;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the user
     */
    public User getUser() {
        return user;
    }

    /**
     * @param user the user to set
     */
    public void setUser(User user) {
        this.user = user;
    }

    /**
     * @return the mahasiswa
     */
    public Mahasiswa getMahasiswa() {
        return mahasiswa;
    }

    /**
     * @param mahasiswa the mahasiswa to set
     */
    public void setMahasiswa(Mahasiswa mahasiswa) {
        this.mahasiswa = mahasiswa;
    }

    /**
     * @return the jadwalSeminar
     */
    public JadwalSeminar getJadwalSeminar() {
        return jadwalSeminar;
    }

    /**
     * @param jadwalSeminar the jadwalSeminar to set
     */
    public void setJadwalSeminar(JadwalSeminar jadwalSeminar) {
        this.jadwalSeminar = jadwalSeminar;
    }
}
