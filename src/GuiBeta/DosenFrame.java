/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiBeta;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modultugasakhir.*;

/**
 *
 * @author Jempol
 */
@SuppressWarnings("serial")
public class DosenFrame extends javax.swing.JFrame {
    private User user = new User();
    private Dosen dosen = new Dosen();
    private Mahasiswa mahasiswa = new Mahasiswa();
    private Judul judul = new Judul();
    private Revisi revisi = new Revisi();
    private Kelayakan kelayakan = new Kelayakan();
    
    /**
     * Creates new form isi_dos
     */
    public DosenFrame() {
        initComponents();
        hideShowAll(false);
    }
    
    public DosenFrame(User user) {
        setUser(user);
        setDosen(new Dosen().getSingleDatabase(user.getUsername()));
        initComponents();
        hideShowAll(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nimLabel = new javax.swing.JLabel();
        nimTextField = new javax.swing.JTextField();
        nimCariButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        revisiTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        revisiTextField = new javax.swing.JTextField();
        revisiButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        judulTable = new javax.swing.JTable();
        revisiInputLabel = new javax.swing.JLabel();
        jadwalSeminarTaButton = new javax.swing.JButton();
        revisiLabel = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nimLabel.setText("MASUKKAN NIM");

        nimCariButton.setText("CARI");
        nimCariButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nimCariButtonActionPerformed(evt);
            }
        });

        revisiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Judul", "Revisi", "Tanggal Revisi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(revisiTable);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DOSEN");

        revisiButton.setText("TAMBAH");
<<<<<<< HEAD:src/GuiBeta/isi_dos.java
=======
        revisiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revisiButtonActionPerformed(evt);
            }
        });
>>>>>>> 7aef974e21318982a226210151cfdf783aa9c8f9:src/GuiBeta/DosenFrame.java

        judulTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Judul", "Judul", "Deskripsi", "Kelayakan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        judulTable.setColumnSelectionAllowed(true);
        judulTable.getTableHeader().setReorderingAllowed(false);
        judulTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                judulTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(judulTable);
        judulTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        revisiInputLabel.setText("MASUKKAN REVISI");

        jadwalSeminarTaButton.setText("LIHAT JADWAL SEMINAR");

        revisiLabel.setText("LIST REVISI");

        logoutButton.setText("LOGOUT");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(nimLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nimTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nimCariButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jadwalSeminarTaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
<<<<<<< HEAD:src/GuiBeta/isi_dos.java
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(159, 159, 159)
                                .addComponent(revisiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(revisiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(revisiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(revisiInputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
=======
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(jadwalSeminarTaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(98, 98, 98)
                        .addComponent(revisiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(nimLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(nimTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nimCariButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
>>>>>>> 7aef974e21318982a226210151cfdf783aa9c8f9:src/GuiBeta/DosenFrame.java
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nimLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nimTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nimCariButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(revisiInputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(revisiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(revisiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(revisiButton)))
<<<<<<< HEAD:src/GuiBeta/isi_dos.java
                .addGap(32, 32, 32)
                .addComponent(jadwalSeminarTaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
=======
                .addGap(35, 35, 35)
                .addComponent(jadwalSeminarTaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
>>>>>>> 7aef974e21318982a226210151cfdf783aa9c8f9:src/GuiBeta/DosenFrame.java
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nimCariButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nimCariButtonActionPerformed
        // TODO add your handling code here:
        setMahasiswa(new Mahasiswa().getSingleDatabase(nimTextField.getText()));
        if (getMahasiswa().getNama() != null)
        {
            hideShowAll(true);
            getJudulKelayakanFromDatabase();
        }
        else{
            hideShowAll(false);
            JOptionPane.showMessageDialog(null, "Data Tidak Ditemukan!");
        }
        hideRevisi(false);
    }//GEN-LAST:event_nimCariButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        new LoginFrame().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void judulTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_judulTableMouseClicked
        // TODO add your handling code here:
        String idJudul = (String) judulTable.getValueAt(judulTable.getSelectedRow(), 0);
        boolean bool = (Boolean) judulTable.getValueAt(judulTable.getSelectedRow(), 3);
        if(judulTable.getSelectedColumn() == 3){
            setKelayakan(new Kelayakan().cekExistKelayakan(getMahasiswa().getNim(), idJudul));
            if(getKelayakan().getIdLayak() != null){
                getKelayakan().setStatusLayak(bool);
                getKelayakan().updateDatabase();
            }
            else{
                setKelayakan(new Kelayakan(bool, idJudul));
                getKelayakan().insertToDatabase();
            }
        }
        else{
            getRevisiFromDatabase(idJudul);
        }
        hideRevisi(true);
    }//GEN-LAST:event_judulTableMouseClicked

    private void revisiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revisiButtonActionPerformed
        // TODO add your handling code here:
        String idJudul = (String) judulTable.getValueAt(judulTable.getSelectedRow(), 0);
        setRevisi(new Revisi(idJudul, getDosen().getNpp(), revisiTextField.getText(), new java.util.Date()));
        getRevisi().insertToDatabase();
        getRevisiFromDatabase(idJudul);
        JOptionPane.showMessageDialog(null, "Data Tersimpan");
        hideRevisi(false);
    }//GEN-LAST:event_revisiButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DosenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DosenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DosenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DosenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DosenFrame().setVisible(true);
            }
        });
    }

    public void hideShowAll(boolean bool){
        jadwalSeminarTaButton.setVisible(bool);
        revisiLabel.setVisible(bool);
        hideRevisi(bool);
    }
    
    public void hideRevisi(boolean bool){
        revisiButton.setVisible(bool);
        revisiInputLabel.setVisible(bool);
        revisiTextField.setVisible(bool);
    }
    
    public void getJudulKelayakanFromDatabase(){
        DefaultTableModel modelTableJudul = (DefaultTableModel) judulTable.getModel();
        modelTableJudul.setRowCount(0);
        Object[] atributKelayakan = new Object[4];
        try {
            ArrayList<Kelayakan> KelayakanAll = new Kelayakan().getAllJudulKelayakanDatabase(getMahasiswa().getNim());
            Iterator listKelayakan = KelayakanAll.iterator();
            while(listKelayakan.hasNext()){
                Kelayakan eachKelayakan;
                eachKelayakan = (Kelayakan) listKelayakan.next();
                atributKelayakan[0] = eachKelayakan.JudulDalamKelayakan.getIdJudul();
                atributKelayakan[1] = eachKelayakan.JudulDalamKelayakan.getNamaJudul();
                atributKelayakan[2] = eachKelayakan.JudulDalamKelayakan.getDeskripsi();
                atributKelayakan[3] = eachKelayakan.getStatusLayak();
        
                modelTableJudul.addRow(atributKelayakan);
            }
            judulTable.setModel(modelTableJudul);
        } catch (Exception ex) {
            Logger.getLogger(MahasiswaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void getRevisiFromDatabase(String idJudul){
        DefaultTableModel modelTableRevisi = (DefaultTableModel) revisiTable.getModel();
        modelTableRevisi.setRowCount(0);
        Object[] atributRevisi = new Object[3];
        try {
            ArrayList RevisiAll = new Revisi().getAllIdJudulDatabase(idJudul);
            Iterator listRevisi = RevisiAll.iterator();
            while(listRevisi.hasNext()){
                Revisi eachRevisi;
                eachRevisi = (Revisi) listRevisi.next();
                atributRevisi[0] = eachRevisi.JudulDalamRevisi.getIdJudul();
                atributRevisi[1] = eachRevisi.getIsiRevisi();
                atributRevisi[2] = new SimpleDateFormat("dd-MM-yyyy").format(eachRevisi.getTanggalRevisi());
        
                modelTableRevisi.addRow(atributRevisi);
            }
            revisiTable.setModel(modelTableRevisi);
        } catch (Exception ex) {
            Logger.getLogger(MahasiswaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jadwalSeminarTaButton;
    private javax.swing.JTable judulTable;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton nimCariButton;
    private javax.swing.JLabel nimLabel;
    private javax.swing.JTextField nimTextField;
    private javax.swing.JButton revisiButton;
    private javax.swing.JLabel revisiInputLabel;
    private javax.swing.JLabel revisiLabel;
    private javax.swing.JTable revisiTable;
    private javax.swing.JTextField revisiTextField;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the user
     */
    public User getUser() {
        return user;
    }

    /**
     * @param user the user to set
     */
    public void setUser(User user) {
        this.user = user;
    }

    /**
     * @return the dosen
     */
    public Dosen getDosen() {
        return dosen;
    }

    /**
     * @param dosen the dosen to set
     */
    public void setDosen(Dosen dosen) {
        this.dosen = dosen;
    }

    /**
     * @return the mahasiswa
     */
    public Mahasiswa getMahasiswa() {
        return mahasiswa;
    }

    /**
     * @param mahasiswa the mahasiswa to set
     */
    public void setMahasiswa(Mahasiswa mahasiswa) {
        this.mahasiswa = mahasiswa;
    }

    /**
     * @return the judul
     */
    public Judul getJudul() {
        return judul;
    }

    /**
     * @param judul the judul to set
     */
    public void setJudul(Judul judul) {
        this.judul = judul;
    }

    /**
     * @return the revisi
     */
    public Revisi getRevisi() {
        return revisi;
    }

    /**
     * @param revisi the revisi to set
     */
    public void setRevisi(Revisi revisi) {
        this.revisi = revisi;
    }

    /**
     * @return the kelayakan
     */
    public Kelayakan getKelayakan() {
        return kelayakan;
    }

    /**
     * @param kelayakan the kelayakan to set
     */
    public void setKelayakan(Kelayakan kelayakan) {
        this.kelayakan = kelayakan;
    }
}
